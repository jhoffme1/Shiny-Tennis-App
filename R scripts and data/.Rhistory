qplot(Average_US_R3_W$B365W, geom="histogram",
binwidth = 1,
main = "Third Round US Open Winners",
xlab = "Betting Range",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_US_R3_L= US_open_R3_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_US_R3_L)[names(Average_US_R3_L) == "mean(B365L)"] <- "B365L"
qplot(Average_US_R3_L$B365L, geom="histogram",
binwidth = 1,
main = "Third Round US Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
French_open_R3_Win= filtered_betw_3 %>% filter(Tournament %in% c("French Open"))
French_open_R3_Loss= filtered_betL_3 %>% filter(Tournament %in% c("French Open"))
Average_French_R3_W= French_open_R3_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_French_R3_W)[names(Average_French_R3_W) == "mean(B365W)"] <- "B365W"
qplot(Average_French_R3_W$B365W, geom="histogram",
binwidth = 1,
main = "Third Round French Open Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_French_R3_L= French_open_R3_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_French_R3_L)[names(Average_French_R3_L) == "mean(B365L)"] <- "B365L"
qplot(Average_French_R3_L$B365L, geom="histogram",
binwidth = 1,
main = "Third Round French Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
Australian_open_R3_Win= filtered_betw_3 %>% filter(Tournament %in% c("Australian Open"))
Australian_open_R3_Loss= filtered_betL_3 %>% filter(Tournament %in% c("Australian Open"))
Average_Aussie_R3_W= Australian_open_R3_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Aussie_R3_W)[names(Average_Aussie_R3_W) == "mean(B365W)"] <- "B365W"
qplot(Average_Aussie_R3_W$B365W, geom="histogram",
binwidth = 1,
main = "Third Round Aussie Open Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_Aussie_R3_L= Australian_open_R3_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Aussie_R3_L)[names(Average_Aussie_R3_L) == "mean(B365L)"] <- "B365L"
qplot(Average_Aussie_R3_L$B365L, geom="histogram",
binwidth = 1,
main = "Third Round Aussie Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
Wimbledon_R3_Win= filtered_betw_3 %>% filter(Tournament %in% c("Wimbledon"))
Wimbledon_R3_Loss= filtered_betL_3 %>% filter(Tournament %in% c("Wimbledon"))
Average_Wimbledon_R3_W= Wimbledon_R3_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Wimbledon_R3_W)[names(Average_Wimbledon_R3_W) == "mean(B365W)"] <- "B365W"
qplot(Average_Wimbledon_R3_W$B365W, geom="histogram",
binwidth = 1,
main = "Third Round Wimbledon Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_Wimbledon_R3_L= Wimbledon_R3_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Wimbledon_R3_L)[names(Average_Wimbledon_R3_L) == "mean(B365L)"] <- "B365L"
qplot(Average_Wimbledon_R3_L$B365L, geom="histogram",
binwidth = 1,
main = "Third Round Wimbledon Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
US_open_R4_Win= filtered_betw_4 %>% filter(Tournament %in% c("US Open"))
US_open_R4_Loss= filtered_betL_4 %>% filter(Tournament %in% c("US Open"))
Average_US_R4_W= US_open_R4_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_US_R4_W)[names(Average_US_R4_W) == "mean(B365W)"] <- "B365W"
qplot(Average_US_R4_W$B365W, geom="histogram",
binwidth = 1,
main = "Fourth Round US Open Winners",
xlab = "Betting Range",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_R4_US_L= US_open_R4_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_R4_US_L)[names(Average_R4_US_L) == "mean(B365L)"] <- "B365L"
qplot(Average_R4_US_L$B365L, geom="histogram",
binwidth = 1,
main = "Fourth Round US Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
French_open_R4_Win= filtered_betw_4 %>% filter(Tournament %in% c("French Open"))
French_open_R4_Loss= filtered_betL_4 %>% filter(Tournament %in% c("French Open"))
Average_French_R4_W= French_open_R4_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_French_R4_W)[names(Average_French_R4_W) == "mean(B365W)"] <- "B365W"
qplot(Average_French_R4_W$B365W, geom="histogram",
binwidth = 1,
main = "Fourth Round French Open Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_French_R4_L= French_open_R4_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_French_R4_L)[names(Average_French_R4_L) == "mean(B365L)"] <- "B365L"
qplot(Average_French_R4_L$B365L, geom="histogram",
binwidth = 1,
main = "Fourth Round French Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
Australian_open_R4_Win= filtered_betw_4 %>% filter(Tournament %in% c("Australian Open"))
Australian_open_R4_Loss= filtered_betL_4 %>% filter(Tournament %in% c("Australian Open"))
Average_Aussie_R4_W= Australian_open_R4_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Aussie_R4_W)[names(Average_Aussie_R4_W) == "mean(B365W)"] <- "B365W"
qplot(Average_Aussie_R4_W$B365W, geom="histogram",
binwidth = 1,
main = "Fourth Round Aussie Open Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_Aussie_R4_L= Australian_open_R4_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Aussie_R4_L)[names(Average_Aussie_R4_L) == "mean(B365L)"] <- "B365L"
qplot(Average_Aussie_R4_L$B365L, geom="histogram",
binwidth = 1,
main = "Fourth Round Aussie Open Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
Wimbledon_R4_Win= filtered_betw_4 %>% filter(Tournament %in% c("Wimbledon"))
Wimbledon_R4_Loss= filtered_betL_4 %>% filter(Tournament %in% c("Wimbledon"))
Average_Wimbledon_R4_W= Wimbledon_R4_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Wimbledon_R4_W)[names(Average_Wimbledon_R4_W) == "mean(B365W)"] <- "B365W"
qplot(Average_Wimbledon_R4_W$B365W, geom="histogram",
binwidth = 1,
main = "Fourth Round Wimbledon Winners",
xlab = "Betting Range",
ylab = "Player count",
fill=I("blue"),
col=I("red"),
alpha=I(20),
xlim=c(0,35))
Average_Wimbledon_R4_L= Wimbledon_R4_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Wimbledon_R4_L)[names(Average_Wimbledon_R4_L) == "mean(B365L)"] <- "B365L"
qplot(Average_Wimbledon_R4_L$B365L, geom="histogram",
binwidth = 1,
main = "Fourth Round Wimbledon Losers",
xlab = "Betting Range",
ylab = "Player count",
fill=I("red"),
col=I("blue"),
alpha=I(20),
xlim=c(0,35))
US_open_QF_Win= filtered_betw_QF %>% filter(Tournament %in% c("US Open"))
US_open_QF_Loss= filtered_betL_QF %>% filter(Tournament %in% c("US Open"))
Average_US_QF_W= US_open_QF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_US_QF_W)[names(Average_US_QF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_US_QF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Winning players in US QF")
Average_QF_US_L= US_open_QF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_QF_US_L)[names(Average_QF_US_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_QF_US_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Losing players in US QF")
French_open_QF_Win= filtered_betw_QF %>% filter(Tournament %in% c("French Open"))
French_open_QF_Loss= filtered_betL_QF %>% filter(Tournament %in% c("French Open"))
Average_French_QF_W= French_open_QF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_French_QF_W)[names(Average_French_QF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_French_QF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Winning players in French Open QF")
Average_French_QF_L= French_open_QF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_French_QF_L)[names(Average_French_QF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_French_QF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Losing players in French Open QF")
Australian_open_QF_Win= filtered_betw_QF %>% filter(Tournament %in% c("Australian Open"))
Australian_open_QF_Loss= filtered_betL_QF %>% filter(Tournament %in% c("Australian Open"))
Average_Aussie_QF_W= Australian_open_QF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Aussie_QF_W)[names(Average_Aussie_QF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_Aussie_QF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Winning players in Aussie Open QF")
Average_Aussie_QF_L= Australian_open_QF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Aussie_QF_L)[names(Average_Aussie_QF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_Aussie_QF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Losing players in Aussie Open QF")
Wimbledon_QF_Win= filtered_betw_QF %>% filter(Tournament %in% c("Wimbledon"))
Wimbledon_QF_Loss= filtered_betL_QF %>% filter(Tournament %in% c("Wimbledon"))
Average_Wimbledon_QF_W= Wimbledon_QF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Wimbledon_QF_W)[names(Average_Wimbledon_QF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_Wimbledon_QF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Winning players in Wimbledon QF")
Average_Wimbledon_QF_L= Wimbledon_QF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Wimbledon_QF_L)[names(Average_Wimbledon_QF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_Wimbledon_QF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 5)) +
labs(title ="Average Betting Odds for Losing players in Wimbledon QF")
US_open_SF_Win= filtered_betw_SF %>% filter(Tournament %in% c("US Open"))
US_open_SF_Loss= filtered_betL_SF %>% filter(Tournament %in% c("US Open"))
Average_US_SF_W= US_open_SF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_US_SF_W)[names(Average_US_SF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_US_SF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Winning players in US Open SF")
Average_SF_US_L= US_open_SF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_SF_US_L)[names(Average_SF_US_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_SF_US_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
theme_minimal() +
theme(axis.text.y= element_text(size= 7)) +
labs(title ="Average Betting Odds for Losing players in US Open SF")
French_open_SF_Win= filtered_betw_SF %>% filter(Tournament %in% c("French Open"))
French_open_SF_Loss= filtered_betL_SF %>% filter(Tournament %in% c("French Open"))
Average_French_SF_W= French_open_SF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_French_SF_W)[names(Average_French_SF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_French_SF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Winning Player in French SF")
Average_French_SF_L= French_open_SF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_French_SF_L)[names(Average_French_SF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_French_SF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Losing Player in French SF")
Australian_open_SF_Win= filtered_betw_SF %>% filter(Tournament %in% c("Australian Open"))
Australian_open_SF_Loss= filtered_betL_SF %>% filter(Tournament %in% c("Australian Open"))
Average_Aussie_SF_W= Australian_open_SF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Aussie_SF_W)[names(Average_Aussie_SF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_Aussie_SF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Winning Player in Aussie SF")
Average_Aussie_SF_L= Australian_open_SF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Aussie_SF_L)[names(Average_Aussie_SF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_Aussie_SF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Losing Player in Aussie SF")
Wimbledon_SF_Win= filtered_betw_SF %>% filter(Tournament %in% c("Wimbledon"))
Wimbledon_SF_Loss= filtered_betL_SF %>% filter(Tournament %in% c("Wimbledon"))
Average_Wimbledon_SF_W= Wimbledon_SF_Win  %>%
group_by(Winner, Tournament, Round)%>%
summarise(., mean(B365W))
names(Average_Wimbledon_SF_W)[names(Average_Wimbledon_SF_W) == "mean(B365W)"] <- "B365W"
ggplot(Average_Wimbledon_SF_W, aes(x=B365W, y=Winner)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Winning Player in Wimbledon SF")
Average_Wimbledon_SF_L= Wimbledon_SF_Loss  %>%
group_by(Loser, Tournament, Round)%>%
summarise(., mean(B365L))
names(Average_Wimbledon_SF_L)[names(Average_Wimbledon_SF_L) == "mean(B365L)"] <- "B365L"
ggplot(Average_Wimbledon_SF_L, aes(x=B365L, y=Loser)) +
geom_point(size=5, shape=20) +
labs(title = "Average Betting Odds for Losing Player in Wimbledon SF")
round_1_exp= experienced_players %>% filter(round %in% c("1st Round"))
round_1_exp[3:4]= NULL
Average_R1= round_1_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_R1)[names(Average_R1) == "mean(experience)"] <- "experience"
round_1_exp= experienced_players %>% filter(round %in% c("1st Round"))
round_1_exp[3:4]= NULL
Average_R1= round_1_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_R1)[names(Average_R1) == "mean(experience)"] <- "experience"
round_1_exp= Average_R1 %>% filter(round %in% c("First round"))
ggplot(Average_R1, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for First Round Matches ")
round_2_exp= experienced_players %>% filter(round %in% c("2nd Round"))
round_2_exp[3:4]= NULL
Average_R2= round_2_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_R2)[names(Average_R2) == "mean(experience)"] <- "experience"
round_2_exp= Average_R2 %>% filter(round %in% c("2nd round"))
ggplot(Average_R2, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for Second Round Matches ")
round_3_exp= experienced_players %>% filter(round %in% c("3rd Round"))
round_3_exp[3:4]= NULL
Average_R3= round_3_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_R3)[names(Average_R3) == "mean(experience)"] <- "experience"
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_R3, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for Third Round Matches ")
#round 4
round_4_exp= experienced_players %>% filter(round %in% c("4th Round"))
round_4_exp[3:4]= NULL
Average_R4= round_4_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_R4)[names(Average_R4) == "mean(experience)"] <- "experience"
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_R4, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for Fourth Round Matches ")
round_QF_exp= experienced_players %>% filter(round %in% c("Quarterfinals"))
round_4_exp[3:4]= NULL
Average_QF= round_QF_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_QF)[names(Average_QF) == "mean(experience)"] <- "experience"
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_QF, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for QF Matches ")
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_R4, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for Fourth Round Matches ")
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_QF, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for QF Matches ")
round_SF_exp= experienced_players %>% filter(round %in% c("Semifinals"))
round_SF_exp[3:4]= NULL
Average_SF= round_SF_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_SF)[names(Average_SF) == "mean(experience)"] <- "experience"
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_SF, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for SF Matches ")
round_F_exp= experienced_players %>% filter(round %in% c("The Final"))
round_F_exp[3:4]= NULL
Average_F= round_F_exp %>%
group_by(name, winner, round) %>%
summarise(., mean(experience))
names(Average_F)[names(Average_F) == "mean(experience)"] <- "experience"
# round_3_exp= Average_R3 %>% filter(round %in% c("3rd round"))
ggplot(Average_F, aes(x = experience, fill = winner)) +
geom_density(position = "identity", alpha = 0.4) +
scale_x_continuous(name = "Amount of matches played") +
scale_y_continuous(name = "Density of players") +
ggtitle("Density Plot of Players Experience for Finals Matches ")
runApp()
library(reshape2)
library(reshape2)
runApp()
runApp()
runApp()
Avg_W_Bet= WinnerBet %>%
group_by(Winner)%>%
summarise(., mean(B365W))
runApp()
runApp()
runApp()
library(tidyr)
library(stringr)
library(tidyverse)
View(WinnerBet)
View(LoserBet)
View(WinnerBet)
runApp()
runApp()
setwd("C:/Users/jhoff/Desktop/files cleaned for shiny/R scripts and data")
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
library(reshape)
install.packages(reshape)
install.packages("reshape")
library(reshape)
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
install.packages("reshape")
install.packages("reshape")
library(reshape)
library(reshape)
library(reshape2)
library(shiny)
library(shinydashboard)
library(ggplot2)
library(dplyr)
library(reshape2)
library(reshape)
library(tidyr)
library(stringr)
library(tidyverse)
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
runApp('C:/Users/jhoff/Desktop/files cleaned for shiny')
